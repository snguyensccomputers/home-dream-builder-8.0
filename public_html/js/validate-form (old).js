var ajax_url = window.location.protocol + '//' + window.location.host;var top10Features = [];var poolFeatures = {    'private-pool': 'Private Pool',    'community-pool': 'Community Pool',    'infinity-pool': 'Infinity Pool',    'screened-in-pool': 'Screened in Pool',    'fenced-pool': 'Fenced Pool',    'lap-pool': 'Lap Pool',    'play-pool': 'Play Pool',    'diving-pool': 'Diving Pool',    'heated-pool': 'Heated Pool'};var basementFeatures = {    'finished-basement': 'Finished Basement',    'bathroom-in-basement': 'Bathroom in Basement'};$(document).ready(function(){    $('form[name=ready-to-dream-form] .btn-submit' +        ',form[name=ready-to-dream-form] .btn-custom' +        ',form[name=ready-to-dream-form] .btn-custom-o').click(function(e){        var form = $('form[name=ready-to-dream-form]');        var canSubmit = true;        var currSection = $(this).closest('section');        if ($(this).hasClass('prev')) {            var prevSection = currSection.prev('section');            currSection.removeClass('active');            prevSection.addClass('active');            $('input[name=left-at]').val(prevSection.attr('id'));        }        else if ($(this).hasClass('next')) {            canSubmit = validateSection(currSection);            if (canSubmit) {                var nextSection = currSection.next('section');                currSection.removeClass('active');                nextSection.addClass('active');                $('input[name=left-at]').val(nextSection.attr('id'));                $('#td-' + currSection.attr('id') + ' + td input[name=cb-feature]').prop('disabled', false).removeClass('no-answer');            }        }        else if ($(this).hasClass('review')) {            fillReviewTable(form);            canSubmit = validateSection(currSection);            if (canSubmit) {                currSection.removeClass('active');                $('#review').addClass('active');            }        }    });    $('form[name=ready-to-dream-form] input[type=submit]').click(function(e){        e.preventDefault ? e.preventDefault() : (e.returnValue = false);        var form = $(this).closest('form');        var formData = form.serialize();        var top10Data = $.param({'top-10-features': top10Features.join()});        var name = $(this).attr('name');        var canSubmit = true;        if (name == 'save-again') {            var urlArr = window.location.href.split("/");            $.ajax({                url: ajax_url + '/application/save/update/' + urlArr[urlArr.length - 1],                method: 'post',                cache: false,                data: formData + '&' + top10Data,                timeout: 10000,                beforeSend: function() {                    swal({                        html: true,                        title: 'Saving your application.<br/>Please wait...',                        text: '<div class="loader"></div>',                        customClass: "swal-loading",                        showConfirmButton: false,                        showCancelButton: false                    });                },                complete: function(){},                success: function (data) {                    setTimeout(function(){                        console.log(data);                        try {                            swal({                                title: 'Success!',                                text: 'Drafting your application is a success! Access the link that was already sent to you by email to continue where you left off.',                                allowOutsideClick: false,                                showCancelButton: false,                                confirmButtonText: "OK",                                closeOnConfirm: true,                                type: 'success'                            }, function () {                                window.location.href = '/';                            });                        }                        catch (e) {                            swal('Error', 'An error has occurred while drafting the application. Contact support for help.', 'error');                        }                    }, 1000);                },                error: function (request, status, message) {                    setTimeout(function() {                        swal('Error', 'An error has occurred while drafting the application. Contact support for help.', 'error');                    }, 1000);                }            });        }        else if (name == 'finish') {            canSubmit = validateSection($(this).closest('section'));            if (canSubmit) {                $.ajax({                    url: ajax_url + '/application/save/check',                    method: 'post',                    cache: false,                    data: formData,                    success: function (data) {                        if (data.found) {                            swal({                                title: 'Another Application Found',                                text: 'There is already an application you saved to finish later. Do you want to delete that one and complete this application instead?',                                type: "warning",                                showCancelButton: true,                                confirmButtonText: "Yes",                                cancelButtonText: "No",                                confirmButtonClass: "btn-danger",                                closeOnConfirm: false,                                closeOnCancel: false                            },                            function (isConfirm) {                                if (isConfirm) {                                    finishDraft(form, top10Data, 'Yes');                                }                                else {                                    swal("Cancelled", "Current application was not completed.", "error");                                }                            });                        }                        else {                            finishDraft(form, top10Data);                        }                    },                    error: function (request, status, message) {                        setTimeout(function() {                            swal('Error', 'An error has occurred while completing the application. Contact support for help.', 'error');                        }, 1000);                    }                });            }        }    });    $('form[name=save-draft-form] input[type=submit]').click(function(e) {        e.preventDefault ? e.preventDefault() : (e.returnValue = false);        var canSubmit = true;        var saveDraftValidation = {            'firstname' : {type: 'input', name: 'firstname', validated: true, message: 'First Name is required'},            'lastname'  : {type: 'input', name: 'lastname', validated: true, message: 'Last Name is required'},            'email'     : {type: 'input', name: 'email', validated: true, message: 'Email is required'}        };        $.each(saveDraftValidation, function(key, value) {            switch (value.type) {                case 'input':                    var input = $('form[name=save-draft-form]' +  ' ' + value.type + '[name=' + key + ']');                    if (input.val() == '') {                        value.validated = false;                        canSubmit = false;                        if (!input.hasClass('required-field')) {                            input.addClass('required-field');                            if ($('#' + key + '-error').length == 0) {                                $("<div class='error-msg' id='" + key + "-error'>" + value.message + "</div>").insertAfter('input[name=' + value.name + ']');                            }                        }                    }                    else {                        value.validated = true;                        $('#' + key + '-error').remove();                        input.removeClass('required-field');                    }                    break;            }        });        if (canSubmit) {            var readyToDreamForm = $('form[name=ready-to-dream-form]');            var saveDraftForm = $(this).closest('form');            $.ajax({                url: ajax_url + '/application/save/check',                method: 'post',                cache: false,                data: saveDraftForm.serialize(),                success: function (data) {                    if (data.found) {                        swal({                            title: 'Another Application Found',                            text: 'There is already an application you saved to finish later. Do you want to delete that one and save this application instead?',                            type: "warning",                            showCancelButton: true,                            confirmButtonText: "Yes",                            cancelButtonText: "No",                            confirmButtonClass: "btn-danger",                            closeOnConfirm: false,                            closeOnCancel: false                        },                        function (isConfirm) {                            if (isConfirm) {                                saveDraft(readyToDreamForm, saveDraftForm, 'Yes');                            }                            else {                                swal("Cancelled", "Current application was not drafted.", "error");                            }                        });                    }                    else {                        saveDraft(readyToDreamForm, saveDraftForm);                    }                },                error: function (request, status, message) {                    setTimeout(function() {                        swal('Error', 'An error has occurred while drafting the application. Contact support for help.', 'error');                    }, 1000);                }            });        }    });    $(document).on('click','#form-table .edit', function(e) {        e.preventDefault ? e.preventDefault() : (e.returnValue = false);        var currSection = $(this).closest('section');        var section = $(this).attr('href');        currSection.removeClass('active');        $(section).addClass('active');    });        $('input[name=cb-feature]').click(function(){        var feature = $(this).val();        var i = 0;        if ($(this).is(':checked')) {            // Loop through Top 10 Features table until an empty cell is found, then fill in the empty cell with the selected feature            $('#top-10-table tbody tr').each(function(){                if ($(this).find('.selected-feature').text() == '') {                    $(this).find('.selected-feature').text(feature);                    top10Features.push(feature);                    $('<span class="ft-600" style="margin-left:10px">' + (10 - i) + '</span>').insertAfter($('input[name=cb-feature][value="' + feature + '"]'));                    return false;                }                i++;            });        }        else {            removeATop10Feature(feature);        }        if (top10Features.length == 10)            $('input[name=cb-feature]:not(:checked)').prop("disabled", true);        else            $('input[name=cb-feature]:not(.no-answer)').prop("disabled", false);    });    // Initializing Top 10 features if page is a saved draft and at Review section    $('#top-10-table tbody tr').each(function () {        if ($(this).find('.selected-feature').text() != '')            top10Features.push($(this).find('.selected-feature').text());        else            return false;    });    $('.property-img > img, .square-img > img, .bg-circle, .bg-circle-o').click(function(e){        var form = $('form[name=ready-to-dream-form]');        var currSection = $(this).closest('section');        if (!currSection.hasClass('multiple-choices')) {            var tagName = $(this).prop('tagName');            var className = $(this).attr('class');            // Clicking on a Yes/No Question            if (tagName == 'IMG') {                var imgContainer = $(this).closest('.yes-no');                var imgAltName = $(this).attr('alt');                var yes = imgAltName.substring(imgAltName.length - 5, imgAltName.length);                var no = imgAltName.substring(imgAltName.length - 4, imgAltName.length);                currSection.find('.yes-no').removeClass('clicked');                imgContainer.addClass('clicked');                                if (yes == '- Yes' || no == '- No') {                    var yesNoAnswer = imgAltName.split(' - ')[1];                    currSection.find('input[name="' + currSection.attr('id') + '"]').val(yesNoAnswer);                    var questions_to_skip_ids = currSection.find('input[name=questions_to_skip_ids]').val();                    if (questions_to_skip_ids != undefined) {                        $.each(questions_to_skip_ids.split(','), function (key, id) {                            if (yesNoAnswer == 'No')                                $('input[name=question_id][value="' + id + '"]').closest('section').addClass('skip');                            else if (yesNoAnswer == 'Yes')                                $('input[name=question_id][value="' + id + '"]').closest('section').removeClass('skip');                        })                    }                }                else {                    currSection.find('input[name="' + currSection.attr('id') + '"]').val(imgAltName);                }            }            else if (className == 'bg-circle' || className == 'bg-circle-o') {                var circleText = $(this).find('.circle-text').text().trim();                currSection.find('input').val(circleText);            }            if (form.hasClass('review')) {                editingFromReviewTable(currSection, form);            }            else {                progressToNextQuestion(currSection, form, yesNoAnswer);            }        }    });});function validateSection(currSection) {    var canSubmit = true;    switch (currSection.attr('id')) {        case 'dwelling-types':            if ($('input[name=dwelling-types]').val() == '') {                if ($('#' + currSection.attr('id') + '-error').length == 0)                    $("<div class='error-msg' id='" + currSection.attr('id') + "-error'>Select a dwelling type(s)</div>").insertAfter('#' + currSection.attr('id') + ' h2');                canSubmit = false;            }            else                $('#' + currSection.attr('id') + '-error').remove();            break;        case 'dwelling-styles':            if ($('input[name=dwelling-styles]').val() == '') {                if ($('#' + currSection.attr('id') + '-error').length == 0)                    $("<div class='error-msg' id='" + currSection.attr('id') + "-error'>Select a dwelling style(s)</div>").insertAfter('#' + currSection.attr('id') + ' h2');                canSubmit = false;            }            else                $('#' + currSection.attr('id') + '-error').remove();            break;        case 'city':            if ($('input[name=city]').val() == '') {                canSubmit = false;            }            if (!canSubmit) {                if ($('#' + currSection.attr('id') + '-error').length == 0)                    $("<div class='error-msg' id='" + currSection.attr('id') + "-error'>Write down a city</div>").insertAfter('#' + currSection.attr('id') + ' h2');                else                    $('#' + currSection.attr('id') + '-error').text('Write down a city');            }            else                $('#' + currSection.attr('id') + '-error').remove();            break;        case 'zipcode':            if ($('input[name=zipcode]').val() == '') {                canSubmit = false;            }            if (!canSubmit) {                if ($('#' + currSection.attr('id') + '-error').length == 0)                    $("<div class='error-msg' id='" + currSection.attr('id') + "-error'>Write down a zip code(s)</div>").insertAfter('#' + currSection.attr('id') + ' h2');                else                    $('#' + currSection.attr('id') + '-error').text('Write down a zip code(s)');            }            else                $('#' + currSection.attr('id') + '-error').remove();            break;        case 'review':            if ($('input[name=pool]').val() == 'Yes' || $('input[name=basement]').val() == 'Yes') {                var missingFeaturesTitle = [];                var allPoolFeatures = true;                if ($('input[name=pool]').val() == 'Yes') {                    $.each(poolFeatures, function (key, feature) {                        if ($('input[name=' + key + ']').val() == '') {                            canSubmit = false;                            allPoolFeatures = false;                            missingFeaturesTitle.push('Pool');                            return false;                        }                    });                }                var allBasementFeatures = true;                if ($('input[name=basement]').val() == 'Yes') {                    $.each(basementFeatures, function (key, feature) {                        if ($('input[name=' + key + ']').val() == '') {                            canSubmit = false;                            allBasementFeatures = false;                            missingFeaturesTitle.push('Basement');                            return false;                        }                    });                }                if (!canSubmit) {                    swal({                        title: 'All ' + missingFeaturesTitle.join(' and ') + ' Features Not Completed',                        text: 'You have selected ' + missingFeaturesTitle.join(' and ') + ' as one of the features requested but do not have all of its additional features decided yet.',                        allowOutsideClick: false,                        showCancelButton: false,                        confirmButtonText: "OK",                        closeOnConfirm: true,                        type: 'error'                    });                    if (!allPoolFeatures || !allBasementFeatures) {                        $('html, body').animate({                            scrollTop: ($('#td-' + ((!allPoolFeatures) ? 'pool' : 'basement')).offset().top - 50)                        }, 1500);                    }                }            }            if (canSubmit && top10Features.length < 4) {                canSubmit = false;                swal({                    title: 'Top 10 Features Not Completed!',                    text: 'You have not selected at least 4 features as the most important things you want in your next home.',                    allowOutsideClick: false,                    showCancelButton: false,                    confirmButtonText: "OK",                    closeOnConfirm: true,                    type: 'error'                });            }            break;        case 'final-section':            if ($('input[name=firstname]').val() == '') {                if ($('#firstname-error').length == 0)                    $("<div class='error-msg' id='firstname-error'>First name is required</div>").insertAfter($('input[name=firstname]'));                canSubmit = false;            }            else {                $('#firstname-error').remove();            }            if ($('input[name=lastname]').val() == '') {                if ($('#lastname-error').length == 0)                    $("<div class='error-msg' id='lastname-error'>Last name is required</div>").insertAfter($('input[name=lastname]'));                canSubmit = false;            }            else {                $('#lastname-error').remove();            }            if ($('input[name=email]').val() == '') {                if ($('#email-error').length == 0)                    $("<div class='error-msg' id='email-error'>Email is required</div>").insertAfter($('input[name=email]'));                canSubmit = false;            }            else {                $('#email-error').remove();            }            if (!$('input[name=no-schedule-call]').is(':checked')) {                if ($('input[name=first-num]').val() == '' || $('input[name=second-num]').val() == '' || $('input[name=third-num]').val() == '') {                    $('#incorrect-phone-error').remove();                    if ($('#phone-error').length == 0)                        $("<div class='error-msg' id='phone-error' style='margin-top:-20px'>Write down your phone number</div>").insertAfter('#phone');                    canSubmit = false;                }                else if ($('input[name=first-num]').val().length != 3 || $('input[name=second-num]').val().length != 3 || $('input[name=third-num]').val().length != 4) {                    $('#phone-error').remove();                    if ($('#incorrect-phone-error').length == 0)                        $("<div class='error-msg' id='incorrect-phone-error' style='margin-top:-20px'>Write down your phone number correctly</div>").insertAfter('#phone');                    canSubmit = false;                }            }            break;    }    return canSubmit;}function saveDraft(readyToDreamForm, saveDraftForm, deleteOldForm = 'No') {    var readyToDreamFormData = readyToDreamForm.serialize();    var saveDraftFormData = saveDraftForm.serialize();    $.ajax({        url: ajax_url + '/application/save',        method: 'post',        cache: false,        data: readyToDreamFormData + '&' + saveDraftFormData + '&delete-old-form=' + deleteOldForm,        timeout: 10000,        beforeSend: function() {            swal({                html: true,                title: ((deleteOldForm == 'Yes') ? 'Deleting your last application and saving this one' : 'Saving your application') + '.<br/>Please wait...',                text: '<div class="loader"></div>',                customClass: "swal-loading",                showConfirmButton: false,                showCancelButton: false            });        },        complete: function(){},        success: function (data) {            setTimeout(function(){                try {                    swal({                        title: 'Success!',                        text: 'Drafting your application is a success! An email has been sent to you with a link to your application to continue where you left off.',                        allowOutsideClick: false,                        showCancelButton: false,                        confirmButtonText: "OK",                        closeOnConfirm: true,                        type: 'success'                    }, function () {                        window.location.href = '/';                    });                }                catch (e) {                    swal('Error', 'An error has occurred while drafting the application. Contact support for help.', 'error');                }            }, 1000);        },        error: function (request, status, message) {            setTimeout(function() {                swal('Error', 'An error has occurred while drafting the application. Contact support for help.', 'error');            }, 1000);        }    });}function finishDraft(readyToDreamForm, top10Data, deleteOldForm = 'No') {    var formData = readyToDreamForm.serialize();        $.ajax({        url: ajax_url + '/application/complete',        method: 'post',        cache: false,        data: formData + '&' + top10Data + '&delete-old-form=' + deleteOldForm,        timeout: 10000,        beforeSend: function () {            swal({                html: true,                title: 'Submitting your application.<br/>Please wait...',                text: '<div class="loader"></div>',                customClass: "swal-loading",                showConfirmButton: false,                showCancelButton: false            });        },        complete: function () {},        success: function (data) {            if (data.success) {                setTimeout(function () {                    try {                        swal({                            title: 'Success!',                            text: 'Submitting your application is a success! Your list has been emailed to you. Please wait for a few days for a representative to get back to you.',                            allowOutsideClick: false,                            showCancelButton: false,                            confirmButtonText: "OK",                            closeOnConfirm: true,                            type: 'success'                        }, function () {                            window.location.href = '/ready-to-dream/thank-you/' + data.form_code;                        });                    }                    catch (e) {                        swal('Error', 'An error has occurred while submitting the application. Contact support for help.', 'error');                    }                }, 1000);            }        },        error: function (request, status, message) {            setTimeout(function () {                swal('Error', 'An error has occurred while submitting the application. Contact support for help.', 'error');            }, 1000);        }    });}function fillReviewTable(form) {    var formTable = $('#form-table');    $.each(form.serializeArray(), function(index, valueObj) {        var name = valueObj.name;        var val = valueObj.value;        formTable.find('#td-' + name).text(val);        if (val != '' && $('#edit-' + name).length == 0) {            formTable.find('#td-' + name).prev().prev().append('<a href="#' + name + '" class="edit" id="edit-' + name + '">Edit</a>');        }    });}function progressToNextQuestion(currSection, form, yesNoAnswer) {    var nextSection;    // If current section is Pool    if (currSection.attr('id') == 'pool') {        // If yes, go to next section; if no, skip to Specific Subdivision        nextSection = (yesNoAnswer == 'Yes') ? currSection.next('section') : $('#specific-subdivision');        $('input[name=left-at]').val('specific-subdivision');        // If no, Disable top 10 checkbox for pool subfeatures        if (yesNoAnswer == 'No') {            $.each(poolFeatures, function(key, title) {                $('input[name=' + key + ']').val('');                $('input[name=cb-feature][value="' + title + '"]').addClass('no-answer');            });        }        else {            $.each(poolFeatures, function(key, title) {                $('input[name=cb-feature][value="' + title + '"]').removeClass('no-answer');            });        }    }    // If current section is Basement    else if (currSection.attr('id') == 'basement') {        // If yes, go to next section; if no, skip to Fireplace        nextSection = (yesNoAnswer == 'Yes') ? currSection.next('section') : $('#fireplace');        $('input[name=left-at]').val('fireplace');        // If no, Disable top 10 checkbox for basement subfeatures        if (yesNoAnswer == 'No') {            $.each(basementFeatures, function(key, title) {                $('input[name=' + key + ']').val('');                $('input[name=cb-feature][value="' + title + '"]').addClass('no-answer');            });        }        else {            $.each(basementFeatures, function(key, title) {                $('input[name=cb-feature][value="' + title + '"]').removeClass('no-answer');            });        }    }    // Otherwise, get the next section    else {        nextSection = currSection.next('section');        $('input[name=left-at]').val(nextSection.attr('id'));    }    // nextSection = currSection.next('section');    // if (nextSection.hasClass('skip')) {    //     var notSkip = false;    //     while (!notSkip) {    //         nextSection = nextSection.next('section');    //         if (!nextSection.hasClass('skip'))    //             notSkip = true;    //     }    // }    // $('input[name=left-at]').val(nextSection.attr('id'));    // If next section is the Review section    if (nextSection.attr('id') == 'review') {        $('input[name=status]').val('review');        form.addClass('review');        fillReviewTable(form);    }    // If current section has an answer, enable its top 10 checkbox in the Review section    $('#td-' + currSection.attr('id') + ' + td input[name=cb-feature]').prop('disabled', false).removeClass('no-answer');    currSection.removeClass('active');    nextSection.addClass('active');}function editingFromReviewTable(currSection, form) {    fillReviewTable(form);    currSection.removeClass('active');    $('#review').addClass('active');    var formTable = $('#form-table');    // If section that was edited was Pool or Basement    if (currSection.attr('id') == 'pool' || currSection.attr('id') == 'basement') {        var selectedSubFeatures = (currSection.attr('id') == 'pool') ? poolFeatures : basementFeatures;        var firstSubFeature = (currSection.attr('id') == 'pool') ? 'private-pool' : 'finished-basement';        if ($('input[name=' + currSection.attr('id') + ']').val() == 'No') {            // If Pool or Basement was changed to No, remove answers of all pool or basement subfeatures, the edit link, and disable its checkbox            $.each(selectedSubFeatures, function(key, feature) {                $('input[name=' + key + ']').val('');                $('#edit-' + key).remove();                $('#td-' + key).text('');                var cbFeature = $('input[name=cb-feature][value="' + feature + '"]');                cbFeature.prop("disabled", true);                cbFeature.addClass('no-answer');                if (cbFeature.is(':checked')) {                    cbFeature.removeAttr('checked');                    removeATop10Feature(feature);                }            });        }        else {            // Enable editing for Pool or Basement subfeatures            if ($('#edit-' + firstSubFeature).length == 0) {                $.each(selectedSubFeatures, function(key, feature) {                    formTable.find('#td-' + key).prev().prev().append('<a href="#' + key + '" class="edit" id="edit-' + key + '">Edit</a>');                });            }        }    }    // $('form[name=ready-to-dream-form] > section').each(function(){    //     var section = $(this);    //    //     if (section.hasClass('skip')) {    //         $('input[name=' + section.attr('id') +  ']').val('');    //         $('#edit-' + section.attr('id')).remove();    //         $('#td-' + section.attr('id')).text('');    //    //         var questionTitle = section.find('h2').find('.question-title').text();    //    //         var cbFeature = $('input[name=cb-feature][value="' + questionTitle + '"]');    //         cbFeature.prop("disabled", true);    //         cbFeature.addClass('no-answer');    //    //         if (cbFeature.is(':checked')) {    //             cbFeature.removeAttr('checked');    //             removeATop10Feature(questionTitle);    //         }    //     }    //     else {    //         if ($('#edit-' + section.attr('id')).length == 0) {    //             formTable.find('#td-' + section.attr('id')).prev().prev().append('<a href="#' + section.attr('id') + '" class="edit" id="edit-' + section.attr('id') + '">Edit</a>');    //         }    //     }    // });    $('#td-' + currSection.attr('id') + ' + td input[name=cb-feature]').prop('disabled', false).removeClass('no-answer');    if (top10Features.length == 10)        $('input[name=cb-feature]:not(:checked)').prop("disabled", true);    else        $('input[name=cb-feature]:not(.no-answer)').prop("disabled", false);}function removeATop10Feature(feature) {    var i = 0;    var splicedIndex = 0;    // Loop through Top 10 Features table until the selected feature to remove is found, then remove it along with the value in the array and the number next to it    $('#top-10-table tbody tr').each(function(){        if ($(this).find('.selected-feature').text() == feature) {            $(this).find('.selected-feature').text('');            top10Features = $.grep(top10Features, function(value) { return value != feature; });            $('input[name=cb-feature][value="' + feature + '"] + span').remove();            splicedIndex = i;            return false;        }        i++;    });    // Do a backwards loop to bring the features after the selected feature up to a number behind    for (var h = splicedIndex; h < top10Features.length; h++) {        $('#feature-' + (10 - h)).text(top10Features[h]);        $('input[name=cb-feature][value="' + top10Features[h] + '"] + span').text(10 - h);    }    $('#feature-' + (10 - top10Features.length)).text('');}